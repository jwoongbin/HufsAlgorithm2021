s = input()

answer = len(s)
for j in range(len(s)//2, 0, -1):
    partitioned = [s[i * j:(i + 1) * j] for i in range((len(s) + j - 1) // j)]
    elem = partitioned[0] # 각각의 분할된 원소를 하나씩 입력
    count = 1 # 중복 횟수를 저장
    compressed = '' # 압축된 문자열을 저장
    for x in range(1, len(partitioned)):
        if elem == partitioned[x]:
            count += 1
        else:
            if count >= 2:
                compressed += str(count)
                compressed += elem
            else:
                compressed += elem
            elem = partitioned[x] # 원소 변경
            count = 1 # 중복 횟수 초기화
    # 마지막 원소에 대해서도 동일한 로직 수행
    if count >= 2:
        compressed += str(count)
        compressed += elem
    else:
        compressed += elem
    answer = min(answer, len(compressed)) # 압축된 문자열의 길이를 작은 값으로 계속 갱신

print(answer)
